{"ast":null,"code":"var _jsxFileName = \"/home/sabrina/workspace/projets/hackathon1/hackathon_29-avril-2020/src/components/Location/Location.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport CamList from '../Page Cams/CamList';\nimport { Button } from 'reactstrap';\nimport './Location.scss';\nconst ContextLocation = [{\n  continent: 'Amérique du Nord',\n  codeContinent: 'NA',\n  countries: [{\n    name: 'Etats Unis',\n    code: 'US'\n  }, {\n    name: 'Canada',\n    code: 'CA'\n  }, {\n    name: 'Mexique',\n    code: 'MX'\n  }]\n}, {\n  continent: 'Afrique',\n  codeContinent: 'AF',\n  countries: [{\n    name: 'Afrique du Sud',\n    code: 'ZA'\n  }, {\n    name: 'Mali',\n    code: 'ML'\n  }, {\n    name: 'Maroc',\n    code: 'MA'\n  }, {\n    name: 'Tanzanie',\n    code: 'TZ'\n  }, {\n    name: 'Egypte',\n    code: 'EG'\n  }]\n}, {\n  continent: 'Amérique du Sud',\n  codeContinent: 'SA',\n  countries: [{\n    name: 'Argentine',\n    code: 'AR'\n  }, {\n    name: 'Brésil',\n    code: 'BR'\n  }, {\n    name: 'Chili',\n    code: 'CL'\n  }, {\n    name: 'Colombie',\n    code: 'CO'\n  }, {\n    name: 'Pérou',\n    code: 'PE'\n  }]\n}, {\n  continent: 'Asie',\n  codeContinent: 'AS',\n  countries: [{\n    name: 'Inde',\n    code: 'IN'\n  }, {\n    name: 'Japon',\n    code: 'JP'\n  }, {\n    name: 'Chine',\n    code: 'CN'\n  }, {\n    name: 'Thaïlande',\n    code: 'TH'\n  }, {\n    name: 'Vietnam',\n    code: 'VN'\n  }]\n}, {\n  continent: 'Océanie',\n  codeContinent: 'OC',\n  countries: [{\n    name: 'Australie',\n    code: 'AU'\n  }, {\n    name: 'Nouvelle-Zélande',\n    code: 'NZ'\n  }, {\n    name: 'Papouasie-Nouvelle-Guinée',\n    code: 'PG'\n  }, {\n    name: 'Fidji',\n    code: 'FJ'\n  }, {\n    name: 'Vanuatu',\n    code: 'VU'\n  }]\n}, {\n  continent: 'Europe',\n  codeContinent: 'EU',\n  countries: [{\n    name: 'France',\n    code: 'FR'\n  }, {\n    name: 'Italie',\n    code: 'IT'\n  }, {\n    name: 'Espagne',\n    code: 'ES'\n  }, {\n    name: 'Allemagne',\n    code: 'DE'\n  }, {\n    name: 'Pays-Bas',\n    code: 'NL'\n  }]\n}];\n\nconst Error = () => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }\n}, \"Something went \", /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 24\n  }\n}, \"wrong\"), \"!\");\n\nfunction Location(props) {\n  const [status, setStatus] = useState('choice');\n  const [category, setCategory] = useState(props.location.state);\n  const [continent, setContinent] = useState();\n  const [countrySelection, setCountrySelection] = useState([]);\n  const [country, setCountry] = useState();\n  const [continentCode, setContinentCode] = useState();\n  const [countryCode, setCountryCode] = useState();\n\n  function checkLocation(location) {\n    setContinent(location.continent);\n    setContinentCode(location.codeContinent);\n    setCountrySelection(location.countries);\n  }\n\n  function checkCountry(country) {\n    setCountry(country.name);\n    setCountryCode(country.code);\n  }\n\n  function showresults() {\n    setStatus('results');\n  }\n\n  console.log(category);\n\n  switch (status) {\n    case \"results\":\n      return /*#__PURE__*/React.createElement(CamList, {\n        category: category,\n        continent: continentCode,\n        country: countryCode,\n        continentName: continent,\n        countryName: country,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 20\n        }\n      });\n\n    case \"choice\":\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 18\n        }\n      }, \"Categorie choisie : \", category), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"titres\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }, \"Choisis un continent :\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"continents\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, ContextLocation.map(location => /*#__PURE__*/React.createElement(Button, {\n        style: {\n          backgroundColor: '#0e0245'\n        },\n        key: location.continent,\n        onClick: () => checkLocation(location),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 33\n        }\n      }, \" \", location.continent, \" \"))), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"titres\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }\n      }, \"Choisis un pays :\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pays\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }\n      }, countrySelection.map(country => /*#__PURE__*/React.createElement(Button, {\n        style: {\n          backgroundColor: '#0e0245'\n        },\n        key: country.name,\n        onClick: () => checkCountry(country),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, \" \", country.name, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"resultat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/camlist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          backgroundColor: '#0e0245'\n        },\n        onClick: showresults,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 45\n        }\n      }, \"Voir les cam\\xE9ras disponibles\"))));\n\n    default:\n      return /*#__PURE__*/React.createElement(Error, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 20\n        }\n      });\n  }\n}\n\nexport default Location;","map":{"version":3,"sources":["/home/sabrina/workspace/projets/hackathon1/hackathon_29-avril-2020/src/components/Location/Location.js"],"names":["React","useState","useEffect","Link","CamList","Button","ContextLocation","continent","codeContinent","countries","name","code","Error","Location","props","status","setStatus","category","setCategory","location","state","setContinent","countrySelection","setCountrySelection","country","setCountry","continentCode","setContinentCode","countryCode","setCountryCode","checkLocation","checkCountry","showresults","console","log","map","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link} from 'react-router-dom';\nimport CamList from '../Page Cams/CamList'\nimport { Button } from 'reactstrap';\nimport './Location.scss';\n\nconst ContextLocation = [\n    {\n        continent: 'Amérique du Nord',\n        codeContinent: 'NA',\n        countries: [\n            {\n                name: 'Etats Unis',\n                code: 'US'\n            },\n            {\n                name: 'Canada',\n                code: 'CA'\n            },\n            {\n\n                name: 'Mexique',\n                code: 'MX'\n            },\n        ]\n\n    },\n    {\n        continent: 'Afrique',\n        codeContinent: 'AF',\n        countries: [\n            {\n                name: 'Afrique du Sud',\n                code: 'ZA'\n            },\n            {\n                name: 'Mali',\n                code: 'ML'\n            },\n            {\n                name: 'Maroc',\n                code: 'MA'\n            },\n            {\n                name: 'Tanzanie',\n                code: 'TZ'\n            },\n            {\n                name: 'Egypte',\n                code: 'EG'\n            },\n        ]\n    },\n    {\n        continent: 'Amérique du Sud',\n        codeContinent: 'SA',\n        countries: [\n            {\n                name: 'Argentine',\n                code: 'AR'\n            },\n            {\n                name: 'Brésil',\n                code: 'BR'\n            },\n            {\n                name: 'Chili',\n                code: 'CL'\n            },\n            {\n                name: 'Colombie',\n                code: 'CO'\n            },\n            {\n                name: 'Pérou',\n                code: 'PE'\n            },\n        ]\n    },\n    {\n        continent: 'Asie',\n        codeContinent: 'AS',\n        countries: [\n            {\n                name: 'Inde',\n                code: 'IN'\n            },\n            {\n                name: 'Japon',\n                code: 'JP'\n            },\n            {\n                name: 'Chine',\n                code: 'CN'\n            },\n            {\n                name: 'Thaïlande',\n                code: 'TH'\n            },\n            {\n                name: 'Vietnam',\n                code: 'VN'\n            },\n        ]\n\n    },\n    {\n        continent: 'Océanie',\n        codeContinent: 'OC',\n        countries: [\n            {\n                name: 'Australie',\n                code: 'AU'\n            },\n            {\n\n                name: 'Nouvelle-Zélande',\n                code: 'NZ'\n            },\n            {\n                name: 'Papouasie-Nouvelle-Guinée',\n                code: 'PG'\n            },\n            {\n                name: 'Fidji',\n                code: 'FJ'\n            },\n            {\n                name: 'Vanuatu',\n                code: 'VU'\n            },\n        ]\n\n    },\n    {\n        continent: 'Europe',\n        codeContinent: 'EU',\n        countries: [\n            {\n                name: 'France',\n                code: 'FR'\n            },\n            {\n                name: 'Italie',\n                code: 'IT'\n            },\n            {\n                name: 'Espagne',\n                code: 'ES'\n            },\n            {\n                name: 'Allemagne',\n                code: 'DE'\n            },\n            {\n                name: 'Pays-Bas',\n                code: 'NL'\n            }\n        ]\n    },\n]\nconst Error = () => (\n    <p>\n        Something went <strong>wrong</strong>!\n    </p>\n);\nfunction Location(props)  {\n    const [status, setStatus] = useState('choice')\n    const [category, setCategory] = useState(props.location.state)\n    const [continent, setContinent] = useState()\n    const [countrySelection, setCountrySelection] = useState([])\n    const [country, setCountry] = useState()\n    const [continentCode, setContinentCode] = useState()\n    const [countryCode, setCountryCode] = useState()\n\n    function checkLocation(location) {\n        setContinent(location.continent)\n        setContinentCode(location.codeContinent)\n        setCountrySelection(location.countries)\n    }\n\n    function checkCountry(country) {\n        setCountry(country.name)\n        setCountryCode(country.code)\n    }\n\n    function showresults() {\n        setStatus('results')\n    }\n    console.log(category)\n    switch (status) {\n        case \"results\":\n            return <CamList category={category} continent={continentCode} country={countryCode} continentName={continent} countryName={country} />;\n        case \"choice\":\n            return (\n                <>\n                 <h3>Categorie choisie : {category}</h3>\n                    <h2 className=\"titres\">Choisis un continent :</h2>\n                    <div className=\"continents\">\n                        {ContextLocation.map(location => (\n                            \n                                <Button style={{ backgroundColor: '#0e0245' }} key={location.continent} onClick={() => checkLocation(location)}> {location.continent} </Button>\n                            \n                        ))}\n                    </div>\n                    <h2 className=\"titres\">Choisis un pays :</h2>\n                    <div className=\"pays\">\n                    {countrySelection.map(country => (\n                    \n                            <Button style={{ backgroundColor: '#0e0245' }} key={country.name} onClick={()=> checkCountry(country)}> {country.name} </Button>\n                            \n                    ))}\n                    </div>\n                    <div className=\"resultat\">\n                        <Link to=\"/camlist\"><Button style={{ backgroundColor: '#0e0245' }} onClick={showresults}>Voir les caméras disponibles</Button></Link>\n                    </div>\n                </>\n            );\n        default:\n            return <Error />;\n    }\n}\n\nexport default Location\n"]},"metadata":{},"sourceType":"module"}