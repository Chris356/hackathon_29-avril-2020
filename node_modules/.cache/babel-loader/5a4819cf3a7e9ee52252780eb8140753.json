{"ast":null,"code":"var _jsxFileName = \"/home/chris/workspace/hackathons/hackathon_29-avril-2020/src/components/Location.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport CamList from './Page Cams/CamList';\n\nfunction Location() {\n  const countries = [{\n    continent: 'Amérique du Nord',\n    codeContinent: 'NA',\n    name: 'Etats Unis',\n    code: 'US'\n  }, {\n    continent: 'Amerique du Nord',\n    codeContinent: 'NA',\n    name: 'Canada',\n    code: 'CA'\n  }, {\n    continent: 'Amérique du Nord',\n    codeContinent: 'NA',\n    name: 'Mexique',\n    code: 'MX'\n  }, {\n    continent: 'Afrique',\n    codeContinent: 'AF',\n    name: 'Afrique du Sud',\n    code: 'ZA'\n  }, {\n    continent: 'Afrique',\n    codeContinent: 'AF',\n    name: 'Mali',\n    code: 'ML'\n  }, {\n    continent: 'Afrique',\n    codeContinent: 'AF',\n    name: 'Maroc',\n    code: 'MA'\n  }, {\n    continent: 'Afrique',\n    codeContinent: 'AF',\n    name: 'Tanzanie',\n    code: 'TZ'\n  }, {\n    continent: 'Afrique',\n    codeContinent: 'AF',\n    name: 'Egypte',\n    code: 'EG'\n  }, {\n    continent: 'Amérique du Sud',\n    codeContinent: 'SA',\n    name: 'Argentine',\n    code: 'AR'\n  }, {\n    continent: 'Amérique du Sud',\n    codeContinent: 'SA',\n    name: 'Brésil',\n    code: 'BR'\n  }, {\n    continent: 'Amérique du Sud',\n    codeContinent: 'SA',\n    name: 'Chili',\n    code: 'CL'\n  }, {\n    continent: 'Amérique du Sud',\n    codeContinent: 'SA',\n    name: 'Colombie',\n    code: 'CO'\n  }, {\n    continent: 'Amérique du Sud',\n    codeContinent: 'SA',\n    name: 'Pérou',\n    code: 'PE'\n  }, {\n    continent: 'Asie',\n    codeContinent: 'AS',\n    name: 'Inde',\n    code: 'IN'\n  }, {\n    continent: 'Asie',\n    codeContinent: 'AS',\n    name: 'Japon',\n    code: 'JP'\n  }, {\n    continent: 'Asie',\n    codeContinent: 'AS',\n    name: 'Chine',\n    code: 'CN'\n  }, {\n    continent: 'Asie',\n    codeContinent: 'AS',\n    name: 'Thaïlande',\n    code: 'TH'\n  }, {\n    continent: 'Asie',\n    codeContinent: 'AS',\n    name: 'Vietnam',\n    code: 'VN'\n  }, {\n    continent: 'Océanie',\n    codeContinent: 'OC',\n    name: 'Australie',\n    code: 'AU'\n  }, {\n    continent: 'Océanie',\n    codeContinent: 'OC',\n    name: 'Nouvelle-Zélande',\n    code: 'NZ'\n  }, {\n    continent: 'Océanie',\n    codeContinent: 'OC',\n    name: 'Papouasie-Nouvelle-Guinée',\n    code: 'PG'\n  }, {\n    continent: 'Océanie',\n    codeContinent: 'OC',\n    name: 'Fidji',\n    code: 'FJ'\n  }, {\n    continent: 'Océanie',\n    codeContinent: 'OC',\n    name: 'Vanuatu',\n    code: 'VU'\n  }, {\n    continent: 'Europe',\n    codeContinent: 'EU',\n    name: 'France',\n    code: 'FR'\n  }, {\n    continent: 'Europe',\n    codeContinent: 'EU',\n    name: 'Italie',\n    code: 'IT'\n  }, {\n    continent: 'Europe',\n    codeContinent: 'EU',\n    name: 'Espagne',\n    code: 'ES'\n  }, {\n    continent: 'Europe',\n    codeContinent: 'EU',\n    name: 'Allemagne',\n    code: 'DE'\n  }, {\n    continent: 'Europe',\n    codeContinent: 'EU',\n    name: 'Pays-Bas',\n    code: 'NL'\n  }];\n  const [status, setStatus] = useState('choice');\n  const [category, setCategory] = useState('beach');\n  const continents = ['Europe', 'Asie', 'Océanie', 'Afrique', 'Amérique du Nord', 'Amérique du Sud'];\n  const [chosenContinent, setChosenContinent] = useState();\n  const [chosenCountry, setChosenCountry] = useState();\n  const [chosenContinentCode, setChosenContinentCode] = useContext(contextValue)();\n  const [chosenCountryCode, setChosenCountryCode] = useState();\n\n  switch (status) {\n    case \"results\":\n      return /*#__PURE__*/React.createElement(CamList, {\n        category: category,\n        continent: chosenContinentcontinentCode,\n        country: chosenContinentcontinentCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 20\n        }\n      });\n\n    case \"setup\":\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, \"Choisis un continent :\"), continents.map(continent => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n          key: continent,\n          onClick: () => setChosenContinent(continent),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }\n        }, \" \", continent, \" \"));\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, \"Choisis un pays :\"), countries.map(country => {\n        if (country.continent === chosenContinent) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n            key: country,\n            onClick: () => setChosenCountry(country),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }\n          }, \" \", country, \" \"));\n        }\n      }));\n  }\n}\n\nexport default Location;","map":{"version":3,"sources":["/home/chris/workspace/hackathons/hackathon_29-avril-2020/src/components/Location.js"],"names":["React","useState","useEffect","useContext","CamList","Location","countries","continent","codeContinent","name","code","status","setStatus","category","setCategory","continents","chosenContinent","setChosenContinent","chosenCountry","setChosenCountry","chosenContinentCode","setChosenContinentCode","contextValue","chosenCountryCode","setChosenCountryCode","chosenContinentcontinentCode","map","country"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport CamList from './Page Cams/CamList'\n\n\nfunction Location()  {\n    const countries = [\n        {\n            continent: 'Amérique du Nord',\n            codeContinent: 'NA',\n            name: 'Etats Unis',\n            code: 'US'\n        },\n        {\n            continent: 'Amerique du Nord',\n            codeContinent: 'NA',\n            name: 'Canada',\n            code: 'CA'\n        },\n        {\n            continent: 'Amérique du Nord',\n            codeContinent: 'NA',\n            name: 'Mexique',\n            code: 'MX'\n        },\n        {\n            continent: 'Afrique',\n            codeContinent: 'AF',\n            name: 'Afrique du Sud',\n            code: 'ZA'\n        },\n        {\n            continent: 'Afrique',\n            codeContinent: 'AF',\n            name: 'Mali',\n            code: 'ML'\n        },\n        {\n            continent: 'Afrique',\n            codeContinent: 'AF',\n            name: 'Maroc',\n            code: 'MA'\n        },\n        {\n            continent: 'Afrique',\n            codeContinent: 'AF',\n            name: 'Tanzanie',\n            code: 'TZ'\n        },\n        {\n            continent: 'Afrique',\n            codeContinent: 'AF',\n            name: 'Egypte',\n            code: 'EG'\n        },\n        {\n            continent: 'Amérique du Sud',\n            codeContinent: 'SA',\n            name: 'Argentine',\n            code: 'AR'\n        },\n        {\n            continent: 'Amérique du Sud',\n            codeContinent: 'SA',\n            name: 'Brésil',\n            code: 'BR'\n        },\n        {\n            continent: 'Amérique du Sud',\n            codeContinent: 'SA',\n            name: 'Chili',\n            code: 'CL'\n        },\n        {\n            continent: 'Amérique du Sud',\n            codeContinent: 'SA',\n            name: 'Colombie',\n            code: 'CO'\n        },\n        {\n            continent: 'Amérique du Sud',\n            codeContinent: 'SA',\n            name: 'Pérou',\n            code: 'PE'\n        },\n        {\n            continent: 'Asie',\n            codeContinent: 'AS',\n            name: 'Inde',\n            code: 'IN'\n        },\n        {\n            continent: 'Asie',\n            codeContinent: 'AS',\n            name: 'Japon',\n            code: 'JP'\n        },\n        {\n            continent: 'Asie',\n            codeContinent: 'AS',\n            name: 'Chine',\n            code: 'CN'\n        },\n        {\n            continent: 'Asie',\n            codeContinent: 'AS',\n            name: 'Thaïlande',\n            code: 'TH'\n        },\n        {\n            continent: 'Asie',\n            codeContinent: 'AS',\n            name: 'Vietnam',\n            code: 'VN'\n        },\n        {\n            continent: 'Océanie',\n            codeContinent: 'OC',\n            name: 'Australie',\n            code: 'AU'\n        },\n        {\n            continent: 'Océanie',\n            codeContinent: 'OC',\n            name: 'Nouvelle-Zélande',\n            code: 'NZ'\n        },\n        {\n            continent: 'Océanie',\n            codeContinent: 'OC',\n            name: 'Papouasie-Nouvelle-Guinée',\n            code: 'PG'\n        },\n        {\n            continent: 'Océanie',\n            codeContinent: 'OC',\n            name: 'Fidji',\n            code: 'FJ'\n        },\n        {\n            continent: 'Océanie',\n            codeContinent: 'OC',\n            name: 'Vanuatu',\n            code: 'VU'\n        },\n        {\n            continent: 'Europe',\n            codeContinent: 'EU',\n            name: 'France',\n            code: 'FR'\n        },\n        {\n            continent: 'Europe',\n            codeContinent: 'EU',\n            name: 'Italie',\n            code: 'IT'\n        },\n        {\n            continent: 'Europe',\n            codeContinent: 'EU',\n            name: 'Espagne',\n            code: 'ES'\n        },\n        {\n            continent: 'Europe',\n            codeContinent: 'EU',\n            name: 'Allemagne',\n            code: 'DE'\n        },\n        {\n            continent: 'Europe',\n            codeContinent: 'EU',\n            name: 'Pays-Bas',\n            code: 'NL'\n        }\n    ]\n\n    const [status, setStatus] = useState('choice')\n    const [category, setCategory] = useState('beach')\n    const continents = ['Europe', 'Asie', 'Océanie', 'Afrique', 'Amérique du Nord', 'Amérique du Sud']\n    const [chosenContinent, setChosenContinent] = useState()\n    const [chosenCountry, setChosenCountry] = useState()\n    const [chosenContinentCode, setChosenContinentCode] = useContext(contextValue)()\n    const [chosenCountryCode, setChosenCountryCode] = useState()\n\n    switch (status) {\n        case \"results\":\n            return <CamList category={category} continent={chosenContinentcontinentCode} country={chosenContinentcontinentCode} />;\n        case \"setup\":\n    return (\n        <>\n        <h4>Choisis un continent :</h4>\n            {continents.map(continent => {\n                return (\n                    <>\n                        <button key={continent} onClick={() => setChosenContinent(continent)}> {continent} </button>\n                        \n                    </>\n                    \n                )\n            })}\n\n        <h4>Choisis un pays :</h4>\n            {countries.map(country => { \n                if (country.continent === chosenContinent) {\n                    return (\n                    <> \n                    <button key={country} onClick={() => setChosenCountry(country)}> {country} </button>\n                    </>\n            )}})}\n\n        </>\n    ) \n}\n}\n\nexport default Location"]},"metadata":{},"sourceType":"module"}