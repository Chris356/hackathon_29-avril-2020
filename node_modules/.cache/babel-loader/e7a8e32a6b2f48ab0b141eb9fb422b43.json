{"ast":null,"code":"var _jsxFileName = \"/home/chris/workspace/hackathons/hackathon_29-avril-2020/src/components/Location.js\";\nimport React, { useState, useEffect } from 'react';\nimport CamList from './PageCams/CamList';\nconst ContextCountry = [{\n  continent: 'Amérique du Nord',\n  codeContinent: 'NA',\n  countries: [{\n    name: 'Etats Unis',\n    code: 'US'\n  }, {\n    name: 'Canada',\n    code: 'CA'\n  }, {\n    name: 'Mexique',\n    code: 'MX'\n  }]\n}, {\n  continent: 'Afrique',\n  codeContinent: 'AF',\n  countries: [{\n    name: 'Afrique du Sud',\n    code: 'ZA'\n  }, {\n    name: 'Mali',\n    code: 'ML'\n  }, {\n    name: 'Maroc',\n    code: 'MA'\n  }, {\n    name: 'Tanzanie',\n    code: 'TZ'\n  }, {\n    name: 'Egypte',\n    code: 'EG'\n  }]\n}, {\n  continent: 'Amérique du Sud',\n  codeContinent: 'SA',\n  countries: [{\n    name: 'Argentine',\n    code: 'AR'\n  }, {\n    name: 'Brésil',\n    code: 'BR'\n  }, {\n    name: 'Chili',\n    code: 'CL'\n  }, {\n    name: 'Colombie',\n    code: 'CO'\n  }, {\n    name: 'Pérou',\n    code: 'PE'\n  }]\n}, {\n  continent: 'Asie',\n  codeContinent: 'AS',\n  countries: [{\n    name: 'Inde',\n    code: 'IN'\n  }, {\n    name: 'Japon',\n    code: 'JP'\n  }, {\n    name: 'Chine',\n    code: 'CN'\n  }, {\n    name: 'Thaïlande',\n    code: 'TH'\n  }, {\n    name: 'Vietnam',\n    code: 'VN'\n  }]\n}, {\n  continent: 'Océanie',\n  codeContinent: 'OC',\n  countries: [{\n    name: 'Australie',\n    code: 'AU'\n  }, {\n    name: 'Nouvelle-Zélande',\n    code: 'NZ'\n  }, {\n    name: 'Papouasie-Nouvelle-Guinée',\n    code: 'PG'\n  }, {\n    name: 'Fidji',\n    code: 'FJ'\n  }, {\n    name: 'Vanuatu',\n    code: 'VU'\n  }]\n}, {\n  continent: 'Europe',\n  codeContinent: 'EU',\n  countries: [{\n    name: 'France',\n    code: 'FR'\n  }, {\n    name: 'Italie',\n    code: 'IT'\n  }, {\n    name: 'Espagne',\n    code: 'ES'\n  }, {\n    name: 'Allemagne',\n    code: 'DE'\n  }, {\n    name: 'Allemagne',\n    code: 'DE'\n  }, {\n    continent: 'Europe',\n    codeContinent: 'EU',\n    name: 'Pays-Bas',\n    code: 'NL'\n  }]\n}];\n\nconst Error = () => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }\n}, \"Something went \", /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 24\n  }\n}, \"wrong\"), \"!\");\n\nfunction Location() {\n  const [status, setStatus] = useState('choice');\n  const [category, setCategory] = useState('beach');\n  const [continent, setContinent] = useState();\n  const [country, setCountry] = useState(); // const [continentCode, setContinentCode] = countries.map(country => {return (country.continent === continent ? country.codeContinent : \"\")})\n\n  const [countryCode, setCountryCode] = useState();\n  console.log(ContextCountry);\n\n  switch (status) {\n    case \"results\": // return <CamList category={category} continent={continentCode} country={countryCode} />;\n\n    case \"choice\":\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, \"Choisis un continent :\"), ContextCountry.map(country => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        key: country.continent,\n        onClick: () => setContinent(country.continent),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }\n      }, \" \", country.continent, \" \"))), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }, \"Choisis un pays :\"));\n\n    default:\n      return /*#__PURE__*/React.createElement(Error, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 20\n        }\n      });\n  }\n}\n\nexport default Location;","map":{"version":3,"sources":["/home/chris/workspace/hackathons/hackathon_29-avril-2020/src/components/Location.js"],"names":["React","useState","useEffect","CamList","ContextCountry","continent","codeContinent","countries","name","code","Error","Location","status","setStatus","category","setCategory","setContinent","country","setCountry","countryCode","setCountryCode","console","log","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport CamList from './PageCams/CamList'\n\nconst ContextCountry = [\n    {\n        continent: 'Amérique du Nord',\n        codeContinent: 'NA',\n        countries: [\n            {\n                name: 'Etats Unis',\n                code: 'US'\n            },\n            {\n                name: 'Canada',\n                code: 'CA'\n            },\n            {\n                \n                name: 'Mexique',\n                code: 'MX'\n            },\n        ]\n        \n    },\n    {\n        continent: 'Afrique',\n        codeContinent: 'AF',\n        countries: [\n            {\n                name: 'Afrique du Sud',\n                code: 'ZA'\n            },\n            {\n                name: 'Mali',\n                code: 'ML'\n            },\n            {\n                name: 'Maroc',\n                code: 'MA'\n            },\n            {\n                name: 'Tanzanie',\n                code: 'TZ'\n            },\n            {\n                name: 'Egypte',\n                code: 'EG'\n            },\n        ]\n    },\n    {\n        continent: 'Amérique du Sud',\n        codeContinent: 'SA',\n        countries:[\n            {\n                name: 'Argentine',\n                code: 'AR'\n            },\n            {\n                name: 'Brésil',\n                code: 'BR'\n            },\n            {\n                name: 'Chili',\n                code: 'CL'\n            },\n            {\n                name: 'Colombie',\n                code: 'CO'\n            },\n            {\n                name: 'Pérou',\n                code: 'PE'\n            },\n    ]\n    },\n    {\n        continent: 'Asie',\n        codeContinent: 'AS',\n        countries: [\n            {\n                name: 'Inde',\n                code: 'IN'\n            },\n            {\n                name: 'Japon',\n                code: 'JP'\n            },\n            {\n                name: 'Chine',\n                code: 'CN'\n            },\n            {\n                name: 'Thaïlande',\n                code: 'TH'\n            },\n            {\n                name: 'Vietnam',\n                code: 'VN'\n            },\n        ]\n        \n    },\n    {\n        continent: 'Océanie',\n        codeContinent: 'OC',\n        countries:[\n            {\n                name: 'Australie',\n                code: 'AU'\n            },\n            {\n                \n                name: 'Nouvelle-Zélande',\n                code: 'NZ'\n            },\n            {\n                name: 'Papouasie-Nouvelle-Guinée',\n                code: 'PG'\n            },\n            {\n                name: 'Fidji',\n                code: 'FJ'\n            },\n            {\n                name: 'Vanuatu',\n                code: 'VU'\n            },\n        ]\n        \n    },\n    {\n        continent: 'Europe',\n        codeContinent: 'EU',\n        countries:[\n            {\n                name: 'France',\n                code: 'FR'\n            },\n            {\n                name: 'Italie',\n                code: 'IT'\n            },\n            {\n                name: 'Espagne',\n                code: 'ES'\n            },\n            {\n                name: 'Allemagne',\n                code: 'DE'\n            },\n            {\n                name: 'Allemagne',\n                code: 'DE'\n            },\n            {\n                continent: 'Europe',\n                codeContinent: 'EU',\n                name: 'Pays-Bas',\n                code: 'NL'\n            }\n        ]       \n    },\n    \n    \n    \n    \n]\nconst Error = () => (\n    <p>\n        Something went <strong>wrong</strong>!\n    </p>\n);\nfunction Location()  {\n    const [status, setStatus] = useState('choice')\n    const [category, setCategory] = useState('beach')\n    const [continent, setContinent] = useState()\n    const [country, setCountry] = useState()\n    // const [continentCode, setContinentCode] = countries.map(country => {return (country.continent === continent ? country.codeContinent : \"\")})\n    const [countryCode, setCountryCode] = useState()\n    console.log(ContextCountry)\n    switch (status) {\n        case \"results\":\n            // return <CamList category={category} continent={continentCode} country={countryCode} />;\n        case \"choice\":\n    return (\n        <>\n        <h4>Choisis un continent :</h4>\n            {ContextCountry.map(country => (\n                    <>\n                        <button key={country.continent} onClick={() => setContinent(country.continent)}> {country.continent} </button> \n                    </>\n            ))}\n\n        <h4>Choisis un pays :</h4>\n            {/* {countries.map(country =>(\n                    <> \n                    <button key={country} onClick={() => setCountry(country)}> {country} </button>\n                    </>\n            ))} */}\n\n        </>\n    );\n    default:\n            return <Error />;\n}\n}\n\nexport default Location"]},"metadata":{},"sourceType":"module"}