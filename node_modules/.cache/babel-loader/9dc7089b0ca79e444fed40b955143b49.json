{"ast":null,"code":"var _jsxFileName = \"/home/chris/workspace/hackathons/hackathon_29-avril-2020/src/components/Location.js\";\nimport React, { useState, useEffect } from 'react';\nimport CamList from './Page Cams/CamList';\nconst ContextLocation = [{\n  continent: 'Amérique du Nord',\n  codeContinent: 'NA',\n  countries: [{\n    name: 'Etats Unis',\n    code: 'US'\n  }, {\n    name: 'Canada',\n    code: 'CA'\n  }, {\n    name: 'Mexique',\n    code: 'MX'\n  }]\n}, {\n  continent: 'Afrique',\n  codeContinent: 'AF',\n  countries: [{\n    name: 'Afrique du Sud',\n    code: 'ZA'\n  }, {\n    name: 'Mali',\n    code: 'ML'\n  }, {\n    name: 'Maroc',\n    code: 'MA'\n  }, {\n    name: 'Tanzanie',\n    code: 'TZ'\n  }, {\n    name: 'Egypte',\n    code: 'EG'\n  }]\n}, {\n  continent: 'Amérique du Sud',\n  codeContinent: 'SA',\n  countries: [{\n    name: 'Argentine',\n    code: 'AR'\n  }, {\n    name: 'Brésil',\n    code: 'BR'\n  }, {\n    name: 'Chili',\n    code: 'CL'\n  }, {\n    name: 'Colombie',\n    code: 'CO'\n  }, {\n    name: 'Pérou',\n    code: 'PE'\n  }]\n}, {\n  continent: 'Asie',\n  codeContinent: 'AS',\n  countries: [{\n    name: 'Inde',\n    code: 'IN'\n  }, {\n    name: 'Japon',\n    code: 'JP'\n  }, {\n    name: 'Chine',\n    code: 'CN'\n  }, {\n    name: 'Thaïlande',\n    code: 'TH'\n  }, {\n    name: 'Vietnam',\n    code: 'VN'\n  }]\n}, {\n  continent: 'Océanie',\n  codeContinent: 'OC',\n  countries: [{\n    name: 'Australie',\n    code: 'AU'\n  }, {\n    name: 'Nouvelle-Zélande',\n    code: 'NZ'\n  }, {\n    name: 'Papouasie-Nouvelle-Guinée',\n    code: 'PG'\n  }, {\n    name: 'Fidji',\n    code: 'FJ'\n  }, {\n    name: 'Vanuatu',\n    code: 'VU'\n  }]\n}, {\n  continent: 'Europe',\n  codeContinent: 'EU',\n  countries: [{\n    name: 'France',\n    code: 'FR'\n  }, {\n    name: 'Italie',\n    code: 'IT'\n  }, {\n    name: 'Espagne',\n    code: 'ES'\n  }, {\n    name: 'Allemagne',\n    code: 'DE'\n  }, {\n    name: 'Pays-Bas',\n    code: 'NL'\n  }]\n}];\n\nconst Error = () => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }\n}, \"Something went \", /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 24\n  }\n}, \"wrong\"), \"!\");\n\nfunction Location(props) {\n  const [status, setStatus] = useState('choice');\n  const [category, setCategory] = useState(props.location.state);\n  const [continent, setContinent] = useState();\n  const [countrySelection, setCountrySelection] = useState([]);\n  const [country, setCountry] = useState();\n  const [continentCode, setContinentCode] = useState();\n  const [countryCode, setCountryCode] = useState();\n  let catégorie = \"\";\n  getCatégorie;\n\n  if (category === \"beach\") {\n    catégorie = 'Plage';\n  } else if (category === \"forest\") {\n    catégorie = 'Forêt';\n  } else if (category === \"mountain\") {\n    catégorie = 'Montagne';\n  } else if (category === \"underwater\") {\n    catégorie = 'Fonds Marins';\n  } else if (category === \"city\") {\n    catégorie = 'Ville';\n  }\n\n  function checkLocation(location) {\n    setContinent(location.continent);\n    setContinentCode(location.codeContinent);\n    setCountrySelection(location.countries);\n  }\n\n  function checkCountry(country) {\n    setCountry(country.name);\n    setCountryCode(country.code);\n  }\n\n  function showresults() {\n    setStatus('results');\n  }\n\n  console.log(category);\n\n  switch (status) {\n    case \"results\":\n      return /*#__PURE__*/React.createElement(CamList, {\n        category: category,\n        continent: continentCode,\n        country: countryCode,\n        continentName: continent,\n        countryName: country,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 20\n        }\n      });\n\n    case \"choice\":\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 5\n        }\n      }, \"Categorie choisie : \", category), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }, \"Choisis un continent :\"), ContextLocation.map(location => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        key: location.continent,\n        onClick: () => checkLocation(location),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }\n      }, \" \", location.continent, \" \"))), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, \"Choisis un pays :\"), countrySelection.map(country => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        key: country.name,\n        onClick: () => checkCountry(country),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }\n      }, \" \", country.name, \" \"))), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: showresults,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }\n      }, \"Voir les cam\\xE9ras disponibles\"));\n\n    default:\n      return /*#__PURE__*/React.createElement(Error, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 20\n        }\n      });\n  }\n}\n\nexport default Location;","map":{"version":3,"sources":["/home/chris/workspace/hackathons/hackathon_29-avril-2020/src/components/Location.js"],"names":["React","useState","useEffect","CamList","ContextLocation","continent","codeContinent","countries","name","code","Error","Location","props","status","setStatus","category","setCategory","location","state","setContinent","countrySelection","setCountrySelection","country","setCountry","continentCode","setContinentCode","countryCode","setCountryCode","catégorie","getCatégorie","checkLocation","checkCountry","showresults","console","log","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport CamList from './Page Cams/CamList'\n\nconst ContextLocation = [\n    {\n        continent: 'Amérique du Nord',\n        codeContinent: 'NA',\n        countries: [\n            {\n                name: 'Etats Unis',\n                code: 'US'\n            },\n            {\n                name: 'Canada',\n                code: 'CA'\n            },\n            {\n                \n                name: 'Mexique',\n                code: 'MX'\n            },\n        ]\n        \n    },\n    {\n        continent: 'Afrique',\n        codeContinent: 'AF',\n        countries: [\n            {\n                name: 'Afrique du Sud',\n                code: 'ZA'\n            },\n            {\n                name: 'Mali',\n                code: 'ML'\n            },\n            {\n                name: 'Maroc',\n                code: 'MA'\n            },\n            {\n                name: 'Tanzanie',\n                code: 'TZ'\n            },\n            {\n                name: 'Egypte',\n                code: 'EG'\n            },\n        ]\n    },\n    {\n        continent: 'Amérique du Sud',\n        codeContinent: 'SA',\n        countries:[\n            {\n                name: 'Argentine',\n                code: 'AR'\n            },\n            {\n                name: 'Brésil',\n                code: 'BR'\n            },\n            {\n                name: 'Chili',\n                code: 'CL'\n            },\n            {\n                name: 'Colombie',\n                code: 'CO'\n            },\n            {\n                name: 'Pérou',\n                code: 'PE'\n            },\n    ]\n    },\n    {\n        continent: 'Asie',\n        codeContinent: 'AS',\n        countries: [\n            {\n                name: 'Inde',\n                code: 'IN'\n            },\n            {\n                name: 'Japon',\n                code: 'JP'\n            },\n            {\n                name: 'Chine',\n                code: 'CN'\n            },\n            {\n                name: 'Thaïlande',\n                code: 'TH'\n            },\n            {\n                name: 'Vietnam',\n                code: 'VN'\n            },\n        ]\n        \n    },\n    {\n        continent: 'Océanie',\n        codeContinent: 'OC',\n        countries:[\n            {\n                name: 'Australie',\n                code: 'AU'\n            },\n            {\n                \n                name: 'Nouvelle-Zélande',\n                code: 'NZ'\n            },\n            {\n                name: 'Papouasie-Nouvelle-Guinée',\n                code: 'PG'\n            },\n            {\n                name: 'Fidji',\n                code: 'FJ'\n            },\n            {\n                name: 'Vanuatu',\n                code: 'VU'\n            },\n        ]\n        \n    },\n    {\n        continent: 'Europe',\n        codeContinent: 'EU',\n        countries:[\n            {\n                name: 'France',\n                code: 'FR'\n            },\n            {\n                name: 'Italie',\n                code: 'IT'\n            },\n            {\n                name: 'Espagne',\n                code: 'ES'\n            },\n            {\n                name: 'Allemagne',\n                code: 'DE'\n            },\n            {\n                name: 'Pays-Bas',\n                code: 'NL'\n            }\n        ]       \n    },\n]\nconst Error = () => (\n    <p>\n        Something went <strong>wrong</strong>!\n    </p>\n);\nfunction Location(props)  {\n    const [status, setStatus] = useState('choice')\n    const [category, setCategory] = useState(props.location.state)\n    const [continent, setContinent] = useState()\n    const [countrySelection, setCountrySelection] = useState([])\n    const [country, setCountry] = useState()\n    const [continentCode, setContinentCode] = useState()\n    const [countryCode, setCountryCode] = useState()\n    let catégorie = \"\"\n\n    getCatégorie\n    if (category === \"beach\") {\n        catégorie = 'Plage'\n    } else if (category === \"forest\") {\n        catégorie = 'Forêt';\n    } else if (category === \"mountain\") {\n        catégorie = 'Montagne';\n    } else if (category === \"underwater\") {\n        catégorie = 'Fonds Marins';\n    } else if (category === \"city\") {\n        catégorie = 'Ville';\n    }\n\n    function checkLocation(location) {\n        setContinent(location.continent)\n        setContinentCode(location.codeContinent)\n        setCountrySelection(location.countries)\n    }\n\n    function checkCountry(country) {\n        setCountry(country.name)\n        setCountryCode(country.code)\n    }\n\n    function showresults() {\n        setStatus('results')\n    }\n    console.log(category)\n    switch (status) {\n        case \"results\":\n            return <CamList category={category} continent={continentCode} country={countryCode} continentName={continent} countryName={country} />;\n        case \"choice\":\n    return (\n        <>\n\n    <h3>Categorie choisie : {category}</h3>\n        <h4>Choisis un continent :</h4>\n            {ContextLocation.map(location => (\n                    <>\n                        <button key={location.continent} onClick={() => checkLocation(location)}> {location.continent} </button> \n                    </>\n            ))}\n\n        <h4>Choisis un pays :</h4>\n            {countrySelection.map(country => (\n                    <> \n                    <button key={country.name} onClick={()=> checkCountry(country)}> {country.name} </button>\n                    </>\n            ))}\n\n        <button onClick={showresults}>Voir les caméras disponibles</button>\n\n        </>\n    );\n    default:\n            return <Error />;\n}\n}\n\nexport default Location"]},"metadata":{},"sourceType":"module"}